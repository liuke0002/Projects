package com.wiipu.bimu.activity;

import android.content.Intent;
import android.graphics.drawable.Drawable;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;

import com.android.volley.VolleyError;
import com.wiipu.bimu.Module.Request.LoginRequest;
import com.wiipu.bimu.Module.Response.LoginResponse;
import com.wiipu.bimu.R;
import com.wiipu.bimu.network.beans.JsonReceive;
import com.wiipu.bimu.utils.AppUtils;
import com.wiipu.bimu.utils.EncryptionUtils;
import com.wiipu.bimu.utils.HttpUtils;
import com.wiipu.bimu.utils.L;
import com.wiipu.bimu.utils.LoginUtils;
import com.wiipu.bimu.utils.UiUtils;
import com.wiipu.bimu.view.ClearEditText;

public class LoginActivity extends BaseActivity {
    private EditText et_pwd;
    private ClearEditText et_phone_num;
    private Button btn_login;



    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login);

        init();

        loadDataFromSp();
    }

    private void loadDataFromSp() {
        // TODO: 2016/3/14 获取存储的手机号码，然后填写到输入手机号码的输入框中。用于用户退出登出要重新登录的情况。

    }

    private void init() {
        btn_login = (Button) findViewById(R.id.login_btn_login);

        et_phone_num = (ClearEditText) findViewById(R.id.login_et_phone_num);
        et_pwd = (EditText) findViewById(R.id.login_et_pwd);

        Drawable pwdDrawable = getResources().getDrawable(R.drawable.password);
        int dimension  = UiUtils.dip2px(20);
        pwdDrawable.setBounds(0,0,dimension,dimension);
        et_pwd.setCompoundDrawables(pwdDrawable,null,null,null);
        Drawable clearDrawable = et_phone_num.getCompoundDrawables()[2];
        Drawable phoneDrawable = getResources().getDrawable(R.drawable.phone);
        phoneDrawable.setBounds(0,0,dimension,dimension);
        et_phone_num.setCompoundDrawables(phoneDrawable,null,clearDrawable,null);
    }

    public void onClick(View view) {
        switch (view.getId()) {
            case R.id.login_btn_register:
                startActivity(new Intent(LoginActivity.this, RegisterActivity.class));
                break;
            case R.id.login_btn_find_pwd:
                startActivity(new Intent(LoginActivity.this, FindPwdActivity.class));
                break;
            case R.id.login_btn_login:
                login();
                break;
        }
    }

    private void login() {
        String phone_num = et_phone_num.getText().toString().trim();
        String pwd = et_pwd.getText().toString().trim();
        pwd = EncryptionUtils.encrypt(pwd,phone_num);

        if (testValid()) {
            LoginUtils.startLogin(new LoginRequest(phone_num,pwd), new LoginUtils.LoginListener() {
                @Override
                public void onResponse(JsonReceive receive) {
                    LoginResponse response = (LoginResponse) receive.getResponse();
                    if(response.getExe_success().equals("1")){
                        //code 1 代表登录成功 ， 2代表为未注册
                        if(response.getCode().equals("1")){
                            LoginUtils.setLoginUid(response.getUid());
                            LoginUtils.setLoginStatus(true);
                            startActivity(new Intent(LoginActivity.this, MainActivity.class));
                            overridePendingTransition(android.R.anim.fade_in, android.R.anim.fade_out);
                        }
                    }else {
                        if(response.getCode().equals("2")){
                            showDialog("此号码尚未注册!");
                        }
                        if(response.getCode().equals("3")){
                            showDialog("密码错误");
                        }
                    }
                }

                @Override
                public void onError(VolleyError error) {
                    showDialog("服务器似乎在开小差~");
                    L.d(error.toString());
                }
            });
        }
    }


    private boolean testValid() {
        if(!AppUtils.isMobileNO(et_phone_num.getText().toString().trim())){
            showDialog("请输入正确的手机号码");
            return false;
        }else if ( TextUtils.isEmpty(et_pwd.getText().toString().trim())) {
            showDialog("密码不能为空");
            return false;
        }
        return true;
    }

    @Override
    protected void onDestroy() {
        HttpUtils.cancelAll(this);
        super.onDestroy();
    }
}
